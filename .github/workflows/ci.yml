---
name: CI
'on':
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 5 * * 4"

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Debug
        run: |
          pwd
          ls -la
          ls -la ..
          ls -la ./tests/

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install -r requirements.txt

      - name: Lint code.
        run: |
          yamllint .
          ansible-lint

  integration:
    name: Integration
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-10.15

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Uninstall GitHub Actions' built-in Homebrew.
        run: tests/uninstall-homebrew.sh

      - name: Uninstall GitHub Actions' built-in browser installs.
        run: |
          sudo rm -rf /Applications/Firefox.app
          sudo rm -rf /Applications/Google\ Chrome.app

      - name: Install test dependencies.
        run: sudo pip3 install -r requirements.txt

      - name: Debug
        run: |
          pwd
          ls -la
          ls -la ..
          ls -la ./tests/

      - name: Set up the test environment.
        run: |
          cp tests/ansible.cfg ./ansible.cfg
          cp tests/inventory ./inventory
          cp tests/config.yml ./config.yml
          ansible-galaxy install -r requirements.yml

      - name: Test the playbook's syntax.
        run: ansible-playbook main.yml --syntax-check

      - name: Test the playbook.
        run: ansible-playbook main.yml
        env:
          ANSIBLE_FORCE_COLOR: '1'

      - name: Test App | Plugins
        run: |
          jcli plugin install configuration-as-code configuration-as-code-secret-ssm credentials aws-secrets-manager-credentials-provider
          jcli center watch
          jcli plugin install mailer cloudbees-folder antisamy-markup-formatter build-timeout credentials-binding timestamper ws-cleanup ant
          jcli center watch
          jcli plugin install gradle nodejs htmlpublisher workflow-aggregator github-branch-source pipeline-github-lib pipeline-stage-view
          jcli center watch
          jcli plugin install copyartifact parameterized-trigger conditional-buildstep bitbucket git github ssh-slaves
          jcli center watch
          jcli plugin install matrix-auth pam-auth ldap role-strategy active-directory authorize-project email-ext
          jcli center watch
          jcli plugin install ndroid-emulator analysis-core android-lint android-signing google-play-android-publisher junit fabric-beta-publisher
          jcli center watch
          jcli plugin installappcenter ios-device-connector rvm xcode-plugin saml ruby-runtime
          jcli center watch
          jcli restart -b

      - name: Idempotence check.
        run: |
          idempotence=$(mktemp)
          ansible-playbook main.yml | tee -a ${idempotence}
          tail ${idempotence} | grep -q 'changed=0.*failed=0' && (echo 'Idempotence test: pass' && exit 0) || (echo 'Idempotence test: fail' && exit 1)
        env:
          ANSIBLE_FORCE_COLOR: '1'
