---
- name: Start Jenkins (Darwin)
  command: /usr/local/bin/brew services start jenkins-lts
  register: startJenkins_result
  when:
    - configure_jenkins_mac

- name: Wait for file to exist
  wait_for:
    path: "{{ jenkins_home_path }}/secrets/initialAdminPassword"
    state: present
    timeout: 60

- name: Get Jenkins inital password
  command: cat {{ jenkins_home_path }}/secrets/initialAdminPassword
  register: initalAdmin_result
  changed_when: false
  when:
    - initalAdmin is undefined
    - configure_jenkins
    - startJenkins_result is defined

- name: Define initalAdmin variable
  set_fact:
    initalAdmin: "{{ initalAdmin_result.stdout }}"
  when:
    - initalAdmin is undefined
    - configure_jenkins

- name: Get crumbs and session info for API calls
  uri:
    url: http://localhost:8080/crumbIssuer/api/json
    method: GET
    user: "admin"
    password: "{{ initalAdmin_result.stdout }}"
    force_basic_auth: true
    status_code: 200
    return_content: true
  register: jenk_crumb
  when:
    - configure_jenkins
  until: jenk_crumb.status == 200
  retries: 5
  delay: 20

- name: Debug get crumbs and session info for API calls
  ansible.builtin.debug:
    var: jenk_crumb.json.crumb

- name: Debug get crumbs and session info for API calls
  ansible.builtin.debug:
    var: jenk_crumb


- name: Get user API token
  uri:
    url: http://localhost:8080/me/descriptorByName/jenkins.security.ApiTokenProperty/generateNewToken
    method: POST
    return_content: true
    force_basic_auth: true
    user: "admin"
    password: "{{ initalAdmin_result.stdout }}"
    status_code: 200
    headers:
      Cookie: "{{ jenk_crumb.cookies_string }}"
      Jenkins-Crumb: "{{ jenk_crumb.json.crumb }}"
    body_format: form-urlencoded
    body:
      - [newTokenName, bootstrap]
  register: jenk_token
  when:
    - configure_jenkins
  until: jenk_token.status == 200
  retries: 3
  delay: 10

- name: Creating a file with content
  copy:
    dest: "~/.jenkins-cli.yaml"
    content: |
      current: localServer
      jenkins_servers:
      - name: localServer
        url: http://localhost:8080
        username: admin
        token: "{{ jenk_token.json.data.tokenValue }}"
        insecureSkipVerify: true
      mirrors:
      - name: default
        url: http://mirrors.jenkins.io/
  when:
    - initalAdmin is defined
    - configure_jenkins

- name: Wait for config file to exist
  wait_for:
    path: ~/.jenkins-cli.yaml
    state: present
    timeout: 300

- name: Pause play until a jenkins is reachable on localhost
  uri:
    url: "http://localhost:8080"
    follow_redirects: none
    method: GET
    force_basic_auth: true
    user: "admin"
    password: "{{ initalAdmin_result.stdout }}"
    status_code: 200
    headers:
      Cookie: "{{ jenk_crumb.cookies_string }}"
      Jenkins-Crumb: "{{ jenk_crumb.json.crumb }}"
  register: wait_result_1
  until: wait_result_1.status == 200
  retries: 20
  delay: 10

- name: install Plugins
  command: "jcli plugin install {{ item.name }}"
  loop: "{{ jenkins_plugins }}"
  args:
    creates: "{{ jenkins_home_path }}/plugins/{{ item.name }}.jpi"

- name: Wait for install to finish
  command: "jcli center watch --util-install-complete"
  register: cli_result_2
  changed_when:
    - '"Error:" in cli_result_2.stderr'

- name: restart
  command: "jcli restart -b"
  register: cli_result_1
  changed_when:
    - '"Error:" in cli_result_1.stderr'

- name: Pause play until a jenkins is reachable on localhost
  uri:
    url: "http://localhost:8080"
    follow_redirects: none
    method: GET
    force_basic_auth: true
    user: "admin"
    password: "{{ initalAdmin_result.stdout }}"
    status_code: 200
    headers:
      Cookie: "{{ jenk_crumb.cookies_string }}"
      Jenkins-Crumb: "{{ jenk_crumb.json.crumb }}"
  register: wait_result_1
  until: wait_result_1.status == 200
  retries: 20
  delay: 10

- name: Check on update status
  command: "jcli center watch --util-install-complete"
  register: cli_result_3
  changed_when:
    - '"Error:" in cli_result_3.stderr'
